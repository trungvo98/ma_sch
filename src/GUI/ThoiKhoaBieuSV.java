/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DangKyHocDAO;
import DAO.GiaoVienDAO;
import DAO.IGiaoVienDAO;
import DAO.ILopHocPhanDAO;
import DAO.IMonHocDAO;
import DAO.LopHocPhanDAO;
import DAO.MonHocDAO;
import Entities.DangKyHoc;
import Entities.GiaoVien;
import Entities.LopHocPhan;
import Entities.MonHoc;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author trung98
 */
public class ThoiKhoaBieuSV extends javax.swing.JFrame {

    /**
     * Creates new form ThoiKhoaBieuSV
     */
    private DefaultTableModel model;
    private ArrayList<DangKyHoc> listDKH;

    public ThoiKhoaBieuSV() {
        initComponents();
        model = (DefaultTableModel) bangtkb.getModel();
    }

    public void loadThoikhoabieu() {
        model.setRowCount(0);
        try {
            listDKH = new DangKyHocDAO().findByMaSV(Main.nameLogin, cb_hockytkb.getSelectedItem().toString(), cb_namhoctkb.getSelectedItem().toString());

            int i = 0;
            for (DangKyHoc dkh : listDKH) {
                i++;
                model.addRow(toObjectsDatatkb(dkh, i));
            }
            bangtkb.setModel(model);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainSV.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            Logger.getLogger(MainSV.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainSV.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static Object[] toObjectsDatatkb(DangKyHoc dkh, int i) throws ClassNotFoundException, InstantiationException, IllegalAccessException {

        ILopHocPhanDAO lopHocPhanDAO = (ILopHocPhanDAO) Class.forName("DAO.LopHocPhanDAO").newInstance();
        // Trả về đối tượng LopHocPhan với MaLHP ,HocKy,Namhoc từ List<DangKyHoc> ở trên
        LopHocPhan lhp = new LopHocPhanDAO().findByMaLHP(dkh.getMaLHP(), dkh.getHocKy(), dkh.getNamHoc());

        IMonHocDAO monHocDAO = (IMonHocDAO) Class.forName("DAO.MonHocDAO").newInstance();
        MonHoc mh = new MonHocDAO().findByMaMH(lhp.getMaMH());

        IGiaoVienDAO giaovienDAO = (IGiaoVienDAO) Class.forName("DAO.GiaoVienDAO").newInstance();
        String tengv = "";
        if (lhp.getMaGV() != null) {

            GiaoVien gv = new GiaoVienDAO().findByMaGV(lhp.getMaGV());
            tengv = gv.getTenGV();
        }
        Object[] objectsData = {i, lhp.getThu(), dkh.getMaLHP(), mh.getTenMH(), tengv, lhp.getTiet(), lhp.getPhonghoc()};

        return objectsData;
    }

    private static XSSFCellStyle createStyleForTitle(XSSFWorkbook workbook) {
        XSSFFont font = workbook.createFont();
        font.setBold(true);
        font.setFontHeightInPoints((short) 16);

        XSSFCellStyle style = workbook.createCellStyle();
        style.setVerticalAlignment(VerticalAlignment.CENTER);
        style.setFont(font);
        return style;
    }

    private static XSSFCellStyle createStyleForBold(XSSFWorkbook workbook) {
        XSSFFont font = workbook.createFont();
        font.setBold(true);

        XSSFCellStyle style = workbook.createCellStyle();
        style.setVerticalAlignment(VerticalAlignment.CENTER);
        style.setAlignment(HorizontalAlignment.LEFT);
        style.setFont(font);
        return style;
    }

    private static XSSFCellStyle createStyleForData(XSSFWorkbook workbook) {
        XSSFFont font = workbook.createFont();
        XSSFCellStyle style = workbook.createCellStyle();
        style.setVerticalAlignment(VerticalAlignment.CENTER);
        style.setAlignment(HorizontalAlignment.LEFT);
        style.setFont(font);
        return style;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cb_hockytkb = new javax.swing.JComboBox<>();
        cb_namhoctkb = new javax.swing.JComboBox<>();
        btn_xemtkb = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        bangtkb = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thời khóa biểu");

        jPanel9.setBackground(java.awt.SystemColor.textHighlight);
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setText("Học kỳ");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setText("Năm học");

        cb_hockytkb.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cb_hockytkb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Học kỳ 1", "Học kỳ 2", "Học kỳ 3  " }));

        cb_namhoctkb.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cb_namhoctkb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2016-2017", "2017-2018", "2018-2019" }));
        cb_namhoctkb.setToolTipText("");

        btn_xemtkb.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btn_xemtkb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/ssss.png"))); // NOI18N
        btn_xemtkb.setText("Xem");
        btn_xemtkb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xemtkbActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/excel.png"))); // NOI18N
        btnExport.setText("Xuất thời khóa biểu");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/ba.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_hockytkb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addComponent(cb_namhoctkb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(btn_xemtkb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(30, 30, 30))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_xemtkb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_namhoctkb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_hockytkb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        bangtkb.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bangtkb.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bangtkb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Thứ", "Lớp", "Môn", "Giảng viên", "Tiết học", "Phòng"
            }
        ));
        jScrollPane3.setViewportView(bangtkb);
        bangtkb.getColumnModel().getColumn(0).setPreferredWidth(50);
        bangtkb.getColumnModel().getColumn(1).setPreferredWidth(50);
        bangtkb.getColumnModel().getColumn(2).setPreferredWidth(100);
        bangtkb.getColumnModel().getColumn(3).setPreferredWidth(200);
        bangtkb.getColumnModel().getColumn(4).setPreferredWidth(150);
        bangtkb.getColumnModel().getColumn(5).setPreferredWidth(100);
        bangtkb.getColumnModel().getColumn(6).setPreferredWidth(100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_xemtkbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xemtkbActionPerformed
        loadThoikhoabieu();
    }//GEN-LAST:event_btn_xemtkbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed

        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFSheet sheet = wb.createSheet("Result");
        sheet.setColumnWidth(0, 2000);
        sheet.setColumnWidth(1, 4000);
        sheet.setColumnWidth(2, 6000);
        sheet.setColumnWidth(3, 6000);
        sheet.setColumnWidth(4, 6000);
        sheet.setColumnWidth(5, 6000);

        int rownum = 2;
        Row row;
        Cell cell;
        XSSFCellStyle style = createStyleForTitle(wb);
        XSSFCellStyle styleBold = createStyleForBold(wb);
        XSSFCellStyle styleData = createStyleForData(wb);
        row = sheet.createRow(rownum);

        XSSFRow title = sheet.createRow(0);
        Cell titleCell = title.createCell(2);
        String hocky = cb_hockytkb.getSelectedItem().toString().toUpperCase();

        titleCell.setCellValue("THỜI KHÓA BIỂU " + hocky + " NĂM HỌC " + cb_namhoctkb.getSelectedItem() + " MASV: " + Main.nameLogin);

        titleCell.setCellStyle(style);

        // Số TT
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("Số TT");
        cell.setCellStyle(styleBold);
        // Môn học
        cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("Thứ");
        cell.setCellStyle(styleBold);
        // Điểm quá trình
        cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("Lớp");
        cell.setCellStyle(styleBold);
        // Điểm giữa kỳ
        cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("Môn học");
        cell.setCellStyle(styleBold);
        // Điểm cuối kỳ
        cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("Giảng viên");
        cell.setCellStyle(styleBold);
        // Điểm trung bình
        cell = row.createCell(5, CellType.STRING);
        cell.setCellValue("Tiết học");
        cell.setCellStyle(styleBold);

        // Phòng
        cell = row.createCell(6, CellType.STRING);
        cell.setCellValue("Phòng");
        cell.setCellStyle(styleBold);

        for (int i = 0; i < bangtkb.getRowCount(); i++) {
            rownum++;
            row = sheet.createRow(rownum);
            // Số TT
            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue(i + 1);
            cell.setCellStyle(styleData);

            // Thứ  
            cell = row.createCell(1, CellType.NUMERIC);
            cell.setCellValue((String) bangtkb.getValueAt(i, 1));
            cell.setCellStyle(styleData);

            // Lớp 
            cell = row.createCell(2, CellType.NUMERIC);
            cell.setCellValue((String) (bangtkb.getValueAt(i, 2)));
            cell.setCellStyle(styleData);
            // Môn học 
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue((String) (bangtkb.getValueAt(i, 3)));
            cell.setCellStyle(styleData);
            // Giảng viên
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue((String) (bangtkb.getValueAt(i, 4)));
            cell.setCellStyle(styleData);
            // Tiết học
            cell = row.createCell(5, CellType.NUMERIC);
            cell.setCellValue(String.valueOf(bangtkb.getValueAt(i, 5)));
            cell.setCellStyle(styleData);

            // Phòng
            cell = row.createCell(6, CellType.NUMERIC);
            cell.setCellValue((String) (bangtkb.getValueAt(i, 6)));
            cell.setCellStyle(styleData);
        }
        /*XSSFRow sum = sheet.createRow(10);
        Cell sumLabelCell = sum.createCell(3);
        sumLabelCell.setCellValue("Điểm trung bình học kỳ :");
        sumLabelCell.setCellStyle(styleBold);
        Cell sumCell = sum.createCell(4);
        sumCell.setCellType(CellType.FORMULA);
        sumCell.setCellStyle(styleData);*/

        File file = new File("E:/Learn Java/Slide UIT/" + "TKB" + Main.nameLogin + ".xlsx");
        file.getParentFile().mkdirs();

        try {
            FileOutputStream outFile = new FileOutputStream(file);
            wb.write(outFile);
            Desktop desktop = Desktop.getDesktop();
            desktop.open(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(KetQuaHocTap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(KetQuaHocTap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThoiKhoaBieuSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThoiKhoaBieuSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThoiKhoaBieuSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThoiKhoaBieuSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThoiKhoaBieuSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangtkb;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btn_xemtkb;
    private javax.swing.JComboBox<String> cb_hockytkb;
    private javax.swing.JComboBox<String> cb_namhoctkb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
